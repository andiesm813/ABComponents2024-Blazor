@page "/stepper"
@using Financial
@using Models.Financial
@inject IFinancialService FinancialService

<div class="row-layout stepper-container">
    <IgbStepper TitlePosition="StepperTitlePosition.Bottom" @ref="_stepper2" class="stepper" stepper-scope>
        <IgbStep Invalid="true">
            <div class="column-layout step-content">
                <IgbInput Label="Label" Placeholder="This is the placeholder" Outlined="true" class="user-input" stepper-scope></IgbInput>
                <IgbInput Label="Label" Placeholder="This is the placeholder" Outlined="true" class="user-input" stepper-scope></IgbInput>
                <div class="row-layout group">
                    <IgbButton Size="SizableComponentSize.Large" @onclick="@(e => _stepper2!.NextAsync())" class="button" stepper-scope>
                        Next
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
            </div>
            <p slot="title">Address</p>
        </IgbStep>
        <IgbStep Invalid="true">
            <div class="column-layout step-content">
                <p class="typography__body-1 text">
                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequatur soluta nulla asperiores, officia ullam recusandae voluptatem omnis perferendis vitae non magni magnam praesentium placeat nemo quas repudiandae. Nisi, quo ex!
                </p>
                <div class="row-layout group">
                    <IgbButton Size="SizableComponentSize.Large" @onclick="@(e => _stepper2!.PrevAsync())" class="button" stepper-scope>
                        Prev
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                    <IgbButton Size="SizableComponentSize.Large" @onclick="@(e => _stepper2!.NextAsync())" class="button" stepper-scope>
                        Next
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
            </div>
            <p slot="title">Item</p>
        </IgbStep>
        <IgbStep Optional="true">
            <div class="column-layout step-content">
                <p class="typography__body-1 text">
                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequatur soluta nulla asperiores, officia ullam recusandae voluptatem omnis perferendis vitae non magni magnam praesentium placeat nemo quas repudiandae. Nisi, quo ex!
                </p>
                <div class="row-layout group">
                    <IgbButton Size="SizableComponentSize.Large" @onclick="@(e => _stepper2!.PrevAsync())" class="button" stepper-scope>
                        Prev
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                    <IgbButton Size="SizableComponentSize.Large" @onclick="@(e => _stepper2!.ResetAsync())" class="button" stepper-scope>
                        Reset
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
            </div>
            <p slot="title">Wrap</p>
            <p slot="subtitle">(Optional)</p>
        </IgbStep>
    </IgbStepper>
    <IgbStepper Orientation="StepperOrientation.Vertical" TitlePosition="StepperTitlePosition.Bottom" @ref="_stepper3" class="stepper" stepper-scope>
        <IgbStep Invalid="true">
            <div class="column-layout step-content">
                <IgbDatePicker Label="Date" class="date-picker" stepper-scope></IgbDatePicker>
                <IgbInput Label="Label" Placeholder="This is the placeholder" Outlined="true" class="user-input" stepper-scope></IgbInput>
                <IgbInput Label="Label" Placeholder="This is the placeholder" Outlined="true" class="user-input" stepper-scope></IgbInput>
                <div class="row-layout group">
                    <IgbButton Size="SizableComponentSize.Large" @onclick="@(e => _stepper3!.NextAsync())" class="button" stepper-scope>
                        Next
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
            </div>
            <p slot="title">Address</p>
        </IgbStep>
        <IgbStep Invalid="true">
            <div class="column-layout step-content">
                <p class="typography__body-1 text">
                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequatur soluta nulla asperiores, officia ullam recusandae voluptatem omnis perferendis vitae non magni magnam praesentium placeat nemo quas repudiandae. Nisi, quo ex!
                </p>
                <div class="row-layout group">
                    <IgbButton Size="SizableComponentSize.Large" @onclick="@(e => _stepper3!.PrevAsync())" class="button" stepper-scope>
                        Prev
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                    <IgbButton Size="SizableComponentSize.Large" @onclick="@(e => _stepper3!.NextAsync())" class="button" stepper-scope>
                        Next
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
            </div>
            <p slot="title">Item</p>
        </IgbStep>
        <IgbStep Optional="true">
            <div class="column-layout step-content">
                <p class="typography__body-1 text">
                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequatur soluta nulla asperiores, officia ullam recusandae voluptatem omnis perferendis vitae non magni magnam praesentium placeat nemo quas repudiandae. Nisi, quo ex!
                </p>
                <div class="row-layout group">
                    <IgbButton Size="SizableComponentSize.Large" @onclick="@(e => _stepper3!.PrevAsync())" class="button" stepper-scope>
                        Prev
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                    <IgbButton Size="SizableComponentSize.Large" @onclick="@(e => _stepper3!.ResetAsync())" class="button" stepper-scope>
                        Reset
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
            </div>
            <p slot="title">Wrap</p>
            <p slot="subtitle">(Optional)</p>
        </IgbStep>
    </IgbStepper>
    <IgbStepper Orientation="StepperOrientation.Vertical" TitlePosition="StepperTitlePosition.Bottom" @ref="_stepper4" class="stepper" stepper-scope>
        <IgbStep Invalid="true">
            <div class="column-layout step-content">
                <IgbCombo Outlined="true" Data="@_financialBoxOfficeRevenue" Label="Label/Placeholder" Placeholder="Placeholder" DisplayKey="Franchise" SingleSelect="true" class="user-input" stepper-scope></IgbCombo>
                <IgbInput Label="Label" Placeholder="This is the placeholder" Outlined="true" class="user-input" stepper-scope></IgbInput>
                <IgbInput Label="Label" Placeholder="This is the placeholder" Outlined="true" class="user-input" stepper-scope></IgbInput>
                <div class="row-layout group">
                    <IgbButton Size="SizableComponentSize.Large" @onclick="@(e => _stepper4!.NextAsync())" class="button" stepper-scope>
                        Next
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
            </div>
            <p slot="title">Address</p>
        </IgbStep>
        <IgbStep Invalid="true">
            <div class="column-layout step-content">
                <p class="typography__body-1 text">
                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequatur soluta nulla asperiores, officia ullam recusandae voluptatem omnis perferendis vitae non magni magnam praesentium placeat nemo quas repudiandae. Nisi, quo ex!
                </p>
                <div class="row-layout group">
                    <IgbButton Size="SizableComponentSize.Large" @onclick="@(e => _stepper4!.PrevAsync())" class="button" stepper-scope>
                        Prev
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                    <IgbButton Size="SizableComponentSize.Large" @onclick="@(e => _stepper4!.NextAsync())" class="button" stepper-scope>
                        Next
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
            </div>
            <p slot="title">Item</p>
        </IgbStep>
        <IgbStep Optional="true">
            <div class="column-layout step-content">
                <p class="typography__body-1 text">
                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequatur soluta nulla asperiores, officia ullam recusandae voluptatem omnis perferendis vitae non magni magnam praesentium placeat nemo quas repudiandae. Nisi, quo ex!
                </p>
                <div class="row-layout group">
                    <IgbButton Size="SizableComponentSize.Large" @onclick="@(e => _stepper4!.PrevAsync())" class="button" stepper-scope>
                        Prev
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                    <IgbButton Size="SizableComponentSize.Large" @onclick="@(e => _stepper4!.ResetAsync())" class="button" stepper-scope>
                        Reset
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
            </div>
            <p slot="title">Wrap</p>
            <p slot="subtitle">(Optional)</p>
        </IgbStep>
    </IgbStepper>
</div>

@code {
    private IgbStepper _stepper2;
    private IgbStepper _stepper3;
    private IgbStepper _stepper4;
    private List<BoxOfficeRevenueType> _financialBoxOfficeRevenue = new();

    protected override async Task OnInitializedAsync()
    {
        _financialBoxOfficeRevenue = await FinancialService.GetBoxOfficeRevenue();
        await base.OnInitializedAsync();
    }
}
